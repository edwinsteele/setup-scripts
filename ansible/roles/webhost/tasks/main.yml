---
- name: setup pf.conf for this role
  copy: src=pf_conf dest=/etc/pf.conf
        owner=root group=wheel mode=0600
        validate="pfctl -n -f %s"
  register: pf_conf_changed

- name: apply any new pf rules immediately
  command: pfctl -f /etc/pf.conf
  when: pf_conf_changed["changed"]

- include: base_nginx.yml

- name: Setup ~esteele/Sites, allowing it to be served up
  file: dest=/home/esteele/Sites state=directory
        owner=esteele group=esteele mode=0711

- name: Create Let's Encrypt directories
  file:
    path: "{{ item.dir }}"
    state: directory
    owner: root
    group: wheel
    mode: "{{ item.mode }}"
  with_items:
    - { dir: "/var/www/letsencrypt", mode: "0755" }
    - { dir: "/etc/ssl/letsencrypt", mode: "0755" }
    - { dir: "/etc/ssl/letsencrypt/private", mode: "0700" }
    - { dir: "/etc/letsencrypt", mode: "0700" }

# XXX - StartSSL certs are old.
#       Replace with something that generates certificates from LetsEncrypt
#       but from their staging setup so we don't get rate limited, and using
#       ansible's creates= so that it doesn't run each time the playbook is
#       run. Also need to add a crontab entry to renew the certificate.
#       See acme-client(1) for an example
- name: Copy ssl chained cert
  copy: src=/Users/esteele/Code/local/startssl/wordspeak.org.chained.crt
        dest=/etc/ssl/certs/wordspeak.org.chained.crt owner=root
        group=wheel mode=0644

- name: Copy ssl trusted chained cert
  copy: src=/Users/esteele/Code/local/startssl/wordspeak.org.chained.trusted.crt
         dest=/etc/ssl/certs/wordspeak.org.chained.trusted.crt owner=root
         group=wheel mode=0644

- name: Copy certificate key
  copy: src=/Users/esteele/Code/local/startssl/www_wordspeak_org.key
         dest=/etc/ssl/certs/wordspeak.org.ssl.key owner=root
         group=wheel mode=0600

- name: Setup webserver parent and acme-client challenge directories
  file: path=/var/www/htdocs/{{ item }} state=directory
        mode=0755 owner=esteele group=esteele
  with_items:
    - staging.wordspeak.org
    - www.wordspeak.org
    - language-explorer.wordspeak.org
    - staging.wordspeak.org/.well-known/acme-client
    - www.wordspeak.org/.well-known/acme-client
    - language-explorer.wordspeak.org/.well-known/acme-client

- name: Setup staging.wordspeak.org symlink
  file: dest=/home/esteele/Sites/staging.wordspeak.org
        src=/var/www/htdocs/staging.wordspeak.org
        state=link

- name: Setup language-explorer.wordspeak.org symlink
  file: dest=/home/esteele/Sites/language-explorer.wordspeak.org
        src=/var/www/htdocs/language-explorer.wordspeak.org
        state=link

- name: Setup www.wordspeak.org symlink
  file: dest=/home/esteele/Sites/www.wordspeak.org
        src=/var/www/htdocs/www.wordspeak.org
        state=link

# Finally setup wordspeak-specific nginx stuff and reload
- name: Setup nginx staging.wordspeak.org config
  copy: src=nginx_confd_staging_wordspeak_org
        dest=/etc/nginx/conf.d/staging_wordspeak_org.conf
        owner=root group=wheel mode=0644
  notify:
  - Reload nginx

- name: Setup nginx language-explorer.wordspeak.org config
  copy: src=nginx_confd_language-explorer_wordspeak_org
        dest=/etc/nginx/conf.d/language-explorer_wordspeak_org.conf
        owner=root group=wheel mode=0644
  notify:
  - Reload nginx

- name: Setup nginx www.wordspeak.org config
  copy: src=nginx_confd_www_wordspeak_org
        dest=/etc/nginx/conf.d/www_wordspeak_org.conf
        owner=root group=wheel mode=0644
  notify:
  - Reload nginx

- include: nikola.yml
